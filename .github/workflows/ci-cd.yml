name: CI/CD

on:
  push:
    branches: [ langgraph ]
  pull_request:
    branches: [ langgraph ]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      LANGCHAIN_API_KEY: ${{ secrets.LANGCHAIN_API_KEY }}
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'  # Specify Python version explicitly
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-html
    - name: Create logs directory
      run: mkdir -p logs
    - name: Run tests
      run: |
        python -m pytest tests/ -v --cov=./ --cov-report=xml --html=test_reports/report.html
    - name: Upload test reports
      uses: actions/upload-artifact@v2
      with:
        name: test-reports
        path: |
          test_reports/
          logs/
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        fail_ci_if_error: true

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    - name: Build project
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install build
        python -m build
    - name: Save build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build-artifacts
        path: dist/

  deploy-api:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Download build artifacts
      uses: actions/download-artifact@v2
      with:
        name: build-artifacts
        path: dist/
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install dist/*.whl
        pip install uvicorn fastapi
    - name: Create prompts directory
      run: |
        mkdir -p prompts
        touch prompts/prompts.yaml
    - name: Start API server
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        LANGCHAIN_API_KEY: ${{ secrets.LANGCHAIN_API_KEY }}
      run: |
        python -m uvicorn sukoon_api:app --host 127.0.0.1 --port 8001 &
        sleep 10  # Give the server time to start
        curl http://127.0.0.1:8001/  # Health check